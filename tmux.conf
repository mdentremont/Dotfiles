# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

setw -g set-clipboard external

# vim
setw -g mode-keys vi

# Select pane when clicked (also passes through)
set-option -g mouse on
setw -g mouse on

# esc to copy mode
bind Escape copy-mode

# huge history
set -g history-limit 10000

unbind K
bind K confirm-before "kill-window"

setw -g automatic-rename

# status bar
#set-option -g status-utf8 on
set-option -g status-justify centre
set-option -g status-bg default
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -sg status-left-length 0
# cool: can use #T to show current directory
set-option -g status-left '#[fg=green][ ###S ] ['
set-option -g status-right '#[fg=green]] [ #[fg=blue]%F #[fg=white]%I:%M%P #[fg=green]]#[default]'
set-window-option -g window-status-current-fg white
set-window-option -g window-status-format '#I:#W#F'
set-window-option -g window-status-current-format '#[fg=red](#[fg=white]#I:#W#F#[fg=red])#[default]'

# clock
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 12

# pane borders
set-option -g pane-border-fg white
set-option -g pane-active-border-fg magenta

# Set window notifications
setw -g monitor-activity on # changes tab color when activity seen
set -g visual-activity off # don't send message when activity seen

# Note to self:
# to monitor for 30s of silence:
# setw monitor-activity off
# setw monitor-silence 30

# Open panes in #{pane_current_path}
unbind-key c
bind-key c new-window -c "#{pane_current_path}"

# splitting panes
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# moving between panes
bind h select-pane -L
bind C-h select-pane -L
bind j select-pane -D
bind C-j select-pane -D
bind k select-pane -U
bind C-k select-pane -U
bind l select-pane -R
bind C-l select-pane -R

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# resizing panes
bind Down resize-pane -D 10
bind Up resize-pane -U 10
bind Left resize-pane -L 10
bind Right resize-pane -R 10

# resource
bind r source-file ~/.tmux.conf

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'C-v' send -X rectangle-toggle

# provided by tmux-yank
#bind-key -Tcopy-mode-vi 'y' send -X copy-selection-and-cancel

# less lag when doing C-a <Esc>
set -s escape-time 0

# Send focus events to vim, etc.
set -g focus-events on

# only shrink window to smallest if another session is looking at it
setw -g aggressive-resize on

# Assume we're using a term that handles 256 color..
set -g default-terminal "screen-256color"

set-option -g default-command "zsh"

# List of plugins
set -g @tpm_plugins '          \
  tmux-plugins/tpm             \
  tmux-plugins/tmux-open       \
  tmux-plugins/tmux-copycat    \
  tmux-plugins/tmux-yank       \
  tmux-plugins/tmux-fpp        \
  NHDaly/tmux-scroll-copy-mode \
'
# tmux-open gives 'o' to open in default program, <C-o> to open in editor
# tmux-copycat gives:
#  - prefix-/ for search,
#  - pf-<C-f> for file search,
#  - pf-<C-g> for git status,
#  - pf-<C-u> for url search
# tmux-yank gives <y> to copy to clipboard, <S-Y> to copy then paste
# tmux-fpp runs Facebook PathPicker on the tty with pf-<f>

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
